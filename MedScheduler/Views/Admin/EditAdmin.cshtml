@model MedScheduler.Models.AdminModel

@{
    ViewBag.Title = "EditAdmin";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h3>Edit</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Adminname, htmlAttributes: new { @class = "control-label col-md-2 fs-5 fw-bolder" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Adminname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Adminname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Jobrole, htmlAttributes: new { @class = "control-label col-md-2 fs-5 fw-bolder" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Jobrole, new { htmlAttributes = new { @class = "form-control fs-4 fw-bold" } })
            @Html.ValidationMessageFor(model => model.Jobrole, "", new { @class = "text-danger" })
        </div>
    </div>

    @*  <div class="form-group">
             @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2 fs-5 fw-bolder" })
             <div class="col-md-10">
                 @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control fs-4 fw-bold" } })
                 @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
             </div>
         </div>

        <div class="form-group">
                 @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2 fs-5 fw-bolder" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control fs-4 fw-bold" } })
                     @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                 </div>
             </div>

             <div class="form-group">
                 @Html.LabelFor(model => model.Identity_verification, htmlAttributes: new { @class = "control-label col-md-2 fs-5 fw-bolder" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.Identity_verification, new { htmlAttributes = new { @class = "form-control fs-4 fw-bold" } })
                     @Html.ValidationMessageFor(model => model.Identity_verification, "", new { @class = "text-danger" })
                 </div>
             </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval");
   
      

    

}